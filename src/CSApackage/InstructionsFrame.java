/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CSApackage;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;

/**
 *
 * @author rod
 */
public class InstructionsFrame extends javax.swing.JFrame {

  /**
   * Creates new form InstructionsFrame
   */
  public InstructionsFrame() {
    initComponents();
    textArea2.setText("\n Step 1: Add some units by clicking in upper left (V-to-\u03bc) chart.\n\n"
            + "   - Click at different horiz. locations to assign different V values.\n"
            + "   - A unit's V value is represents its input summation, but normalized to [0,1].\n"
            + "   - When you add a unit, a unit is also added to each of the CMs at lower right.\n\n"
            + " Step 2: After putting a few cells in the upper left chart, either:\n\n"
            + "   - Press one of the \"life phase\" buttons\n"
            + "       This creates an entire new V dist. in each CM, respecting the specified crostalk limits for all cells besides the max.\n"
            + "       The cell with max V may change with each press. The max V in each cell will be as specified by the G and V sliders (which are tied).\n"
            + "   - press \"Generate New Sample\" button\n"
            + "       This also creates an entire new V dist. in each CM, with specified crostalk limits\n"
            + "       But it keeps the winning cell the same.\n\n"
            + "   The \"max-V\" or \"G\" sliders are synced.\n\n"
            + " Step 3: Then you can play with sliders and buttons to understand how Sparsey preserves similarity \n\n"
            + " Step 4: (optional) Press \"Run Experiment\" button.  Brings up dialog allowing you to run experiment involving\n"
            + "         many runs while max V varies from 1.0 down to the max crosstalk V in specifiable deltas.\n"
            + "         It also allows you to specify the number of trials performed at each max V setting.  It computes average\n"
            + "         for the set of trials at each max V setting.  Soon you'll be able to save results to a txt file.\n\n\n"
            + " Notes: \n\n"
            + "   - You might have to resize to see all the CMs in lower right panel. You can also change number of CMs.\n"
            + "   - You can hit buttons as many times as you want. Each time, new random V distributions are generated.\n"
            + "   - When you move sliders (except for crosstalk distribution limit sliders), the V distributions remain the same,\n"
            + "     but the \u03c1 distributions which vary.\n"
            + "   - When you vary the crosstalk range distribution sliders, you then have to hit one of the buttons to generate\n"
            + "     new V distributions adhering to the updated range.  But if you hit one of the \"life phase\" buttons,\n"
            + "     the crosstalk range limits are set to default values (as are the sliders).  If you want to specify the crosstalk\n"
            + "     range limits and keep them, you should then use the \"Generate New Sample\" button."    
    );
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    textArea2 = new java.awt.TextArea();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Sparsey Code Selection Algorithm (CSA) Demo Instructions");

    textArea2.setEditable(false);
    textArea2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
    textArea2.setMinimumSize(new java.awt.Dimension(300, 300));
    textArea2.setPreferredSize(new java.awt.Dimension(400, 400));
    getContentPane().add(textArea2, java.awt.BorderLayout.CENTER);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  Font axisValuesFont = new Font("Serif", Font.BOLD, 14);
  Font axisVarFont = new Font("Serif", Font.BOLD, 24);
  Font titleFont = new Font("Serif", Font.BOLD, 24);
  
  public void paintComponent (Graphics g)
  {
//    super.paintComponent( g );
    Graphics2D g2 = (Graphics2D) g;
    
    g2.setColor( Color.BLACK );
    
  }
  
  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(InstructionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(InstructionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(InstructionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(InstructionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new InstructionsFrame().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private java.awt.TextArea textArea2;
  // End of variables declaration//GEN-END:variables
}
